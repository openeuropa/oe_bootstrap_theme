<?php

/**
 * @file
 * The oe_bootstrap_theme hooks.
 */

declare(strict_types=1);

use Drupal\Component\Utility\Html;
use Drupal\Core\Template\Attribute;

// Include all files from the includes directory.
$includes_path = __DIR__ . '/includes/*.inc';
foreach (glob($includes_path) as $filename) {
  // The inspection disallowing basename() is not relevant for known paths.
  // phpcs:ignore QualityAssurance.Functions.DrupalWrappers.FoundWithAlternative
  require_once __DIR__ . '/includes/' . basename($filename);
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for table.
 */
function oe_bootstrap_theme_theme_suggestions_table_alter(array &$suggestions, array $variables) {
  if (!theme_get_setting('bootstrap_tables.enable')) {
    return;
  }

  $extra_suggestions[] = 'table__bootstrap';

  $responsive = theme_get_setting('bootstrap_tables.responsive');
  if (is_string($responsive) && $responsive !== '') {
    $extra_suggestions[] = 'table__bootstrap__responsive';
  }

  // Add the new suggestions first in the list, so existing child theme
  // overrides will keep precedence.
  array_unshift($suggestions, ...$extra_suggestions);
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for views-view-table.
 */
function oe_bootstrap_theme_theme_suggestions_views_view_table_alter(array &$suggestions, array $variables) {
  if (!theme_get_setting('bootstrap_tables.enable')) {
    return;
  }

  $extra_suggestions[] = 'views_view_table__bootstrap';

  $responsive = theme_get_setting('bootstrap_tables.responsive');
  if (is_string($responsive) && $responsive !== '') {
    $extra_suggestions[] = 'views_view_table__bootstrap__responsive';
  }

  // Add the new suggestions first in the list, so existing child theme
  // overrides will keep precedence.
  array_unshift($suggestions, ...$extra_suggestions);
}

/**
 * Implements hook_preprocess().
 */
function oe_bootstrap_theme_preprocess(&$variables) {
  // Construct the full URL for the BCL icons.
  $variables['bcl_icon_path'] = _oe_bootstrap_theme_get_icon_path();
}

/**
 * Implements hook_preprocess_HOOK() for table--bootstrap--responsive.html.twig.
 */
function oe_bootstrap_theme_preprocess_table__bootstrap__responsive(&$variables) {
  _oe_bootstrap_theme_bootstrap_responsive_table($variables);
}

/**
 * Implements hook_preprocess_HOOK() for views-view-table--bootstrap--responsive.html.twig.
 */
function oe_bootstrap_theme_preprocess_views_view_table__bootstrap__responsive(&$variables) {
  _oe_bootstrap_theme_bootstrap_responsive_table($variables);
}

/**
 * Function that applies responsiveness to Bootstrap tables.
 *
 * @param array $variables
 *   The variables to process.
 */
function _oe_bootstrap_theme_bootstrap_responsive_table(array &$variables): void {
  $class = 'table-responsive';
  $breakpoint = theme_get_setting('bootstrap_tables.responsive');
  if ($breakpoint !== 'always') {
    $class .= '-' . $breakpoint;
  }

  $variables['wrapper_attributes'] = new Attribute(['class' => $class]);
}

/**
 * Function to generate the BCL icon path.
 *
 * @return string
 *   The full URL for the BCL icons.
 */
function _oe_bootstrap_theme_get_icon_path(): string {
  $path = &drupal_static(__FUNCTION__);
  if (isset($path)) {
    return $path;
  }
  // Get the active theme.
  $theme = \Drupal::theme()->getActiveTheme();

  // Get the theme handler service.
  $theme_handler = \Drupal::service('theme_handler');

  // Initialize variables for the theme path and icon path.
  $bcl_icon_path = NULL;
  $theme_path = '';

  // Traverse up the theme chain until the root theme (oe_bootstrap_theme).
  while ($theme) {
    $theme_name = $theme->getName();
    $theme_info = $theme_handler->getTheme($theme_name)->info;

    // Check if the BCL icon path is set in the current theme.
    if (!empty($theme_info['openeuropa']['bootstrap_component_library']['icon_path'])) {
      $bcl_icon_path = Html::escape($theme_info['openeuropa']['bootstrap_component_library']['icon_path']);
      $theme_path = $theme_handler->getTheme($theme_name)->getPath();
      break;
    }

    // Move to the base theme (if any).
    $parent_theme = $theme_info['base theme'] ?? NULL;
    $theme = $parent_theme ? $theme_handler->getTheme($parent_theme) : NULL;
  }

  // If no BCL icon path was found, use the default path.
  if (!$bcl_icon_path) {
    $oe_bootstrap_theme = $theme_handler->getTheme('oe_bootstrap_theme');
    $bcl_icon_path = 'assets/icons/bcl-default-icons.svg';
    $theme_path = $oe_bootstrap_theme->getPath();
  }
  return  base_path() . $theme_path . '/' . $bcl_icon_path;
}
